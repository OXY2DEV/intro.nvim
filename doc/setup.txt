╭────────────────────────────────────────────────────────── *intro.nvim-setup* ╮
│ 🌌 Setup                              `Setting up the plugin to your tastes` │
╰────────────────────────────────────────────────────────────────────────────╯

               ██████▒▒░░      ⠛⣿⠛ ⣿⣄  ⣿ ⠛⠛⣿⠛⠛ ⣾⠛⠛⣷ ⣾⠛⠛⣷
               ██░░▒▒██▒▒░░     ⣿  ⣿ ⣿ ⣿   ⣿   ⣿⠶⠶⠟ ⣿  ⣿
               ██░░▒▒████▒▒░░   ⣿  ⣿ ⣿ ⣿   ⣿   ⣿⠷   ⣿  ⣿
               ██▒▒▒▒░░▒▒▒▒░░  ⣤⣿⣤ ⣿  ⠙⣿   ⣿   ⣿ ⢷  ⢿⣤⣤⡿.nvim
               ██████▒▒▒▒░░    
               ▒▒▒▒▒▒▒▒░░      `Yet another start screen plugin`


`╭──────────────────────────────────────────────────────────┤` Table of contents
`│`
`├──` Setup Options                                              |intro.nvim-opts|
`╰──` Quick summary of various Options                      |intro.nvim-opts-tldr|

`╭───────────────────────────────────────────────────────────` *intro.nvim-opts* `╮`
`│` 🎨 Setup Options                                          `I like to tweak! │`
`╰────────────────────────────────────────────────────────────────────────────╯`
Here is a quick graph showing all the available options in the setup function

require("intro").setup({opts})
│
│ Options              Sub Options                Extra
│ ╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌  ────────────────────────── ╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌
│
├─ showStatusline
├─ shadaValidate
│
├─ anchors ╌╌╌╌╌╌╌╌╌┬─ position
│                   ├─ textStyle
│                   ├─ cornerStyle
│                   └─ corner
│
├─ preset ╌╌╌╌╌╌╌╌╌╌┬─ name
│                   └─ opts
│
├─ components ╌╌╌╌╌╌┬─ type
│                   ├─ style
│                   ├─ width
│                   ├─ useIcons
│                   ├─ entryCount
│                   ├─ keymap
│                   ├─ useAnchors
│                   ├─ dir
│                   │
│                   ├─ align
│                   ├─ lines
│                   ├─ colors
│                   ├─ secondaryColors
│                   │
│                   ├─ gradientRepeat ╌╌╌╌╌╌╌╌╌╌╌┬─ colors
│                   │                            └─ secondaryColors
│                   ├─ gaps
│                   ├─ itemLimit
│                   └─ keys ╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌┬─ keyCombination
│                                                ├─ keyAction
│                                                ├─ keyOptions
│                                                ├─ gaps
│                                                ├─ text
│                                                └─ color
│
│
├─ globalHighlights                             
│                                               
└─ animations ╌╌╌╌╌╌┬─ delay                    
                    ├─ updateDelay              
                    ├─ highlightBased           
                    └─ textBased ╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌┬─ startDelay
                                                 ├─ frameDelay
                                                 ├─ loopDelay
                                                 ├─ values
					         │
                                                 ├─ mode
                                                 ├─ line
                                                 ├─ x
                                                 └─ y

All the properties, their values, type, usage and examples are given below

`╠════════════════════════════════════════════════════════════════════════════╗`
`║` {showStatusline}                                            boolean or nil `║`
`╠════════════════════════════════════════════════════════════════════════════╝`

Usage
`╭` Lua `───────────────────────────────────────────────────────────────────────╮`
>lua
  require("intro").setup({ showStatusline = true })
<
`╰────────────────────────────────────────────────────────────────────────────╯`
`╭` Neovim `────────────────────────────────────────────────────────────────────╮`
`│                                                                            │`
`│                                                                            │`
`│                                                                            │`
`│                                                                            │`
`│`[No Name]                                                 0,0-1          All`│`
`╰────────────────────────────────────────────────────────────────────────────╯`

This option allows you to show or hide the statusline. 

By default, the statusline is hidden. You can set it to `true` if you want the
statusline to be visible.

`╠════════════════════════════════════════════════════════════════════════════╗`
`║` {shadaValidate}                                             boolean or nil `║`
`╠════════════════════════════════════════════════════════════════════════════╝`

Validates the `oldfiles` and removes files that no longer exists. This does
NOT change the `oldfiles` in any way and need to be redone every time the
plugin is used(since the plugin shouldn't write in the user's file system).

This can increase the load time by a bit.


`╠════════════════════════════════════════════════════════════════════════════╗`
`║` {anchors}                                                     table or nil `║`
`╠════════════════════════════════════════════════════════════════════════════╝`

Usage
`╭` Lua `───────────────────────────────────────────────────────────────────────╮`
>lua
  require("intro").setup({
    anchors = {
      position = "top",

      textStyle = { bg = "#1e1e2e", fg = "#ffffff" },
      cornerStyle = { bg = "#1e1e2e", fg = "#ffffff" },

      corner = " ||"
    }
  })
<
`╰────────────────────────────────────────────────────────────────────────────╯`
`╭` Neovim `────────────────────────────────────────────────────────────────────╮`
`│                                                                            │`
`│                                                                            │`
`│                                                                            │`
`│                                                                            │`
`│` ~/.config/nvim/lua/plugins/intro.lua ||                                    `│`
`╰────────────────────────────────────────────────────────────────────────────╯`

This option allows you to customise the way `file paths` are shown when the
cursor is on a file name.

These are the Sub options available to it.

`├────────────────────────────────────────────────────────────────────────────┐`
`│` {position}                                                   string or nil `│`
`├────────────────────────────────────────────────────────────────────────────┘`

Usage
`╭` Lua `───────────────────────────────────────────────────────────────────────╮`
>lua
  require("intro").setup({
    anchors = { position = "top" }
  })
<
`╰────────────────────────────────────────────────────────────────────────────╯`
`╭` Neovim `────────────────────────────────────────────────────────────────────╮`
`│` ~/.config/nvim/lua/plugins/intro.lua                                       `│`
`│                                                                            │`
`│                                                                            │`
`│                                                                            │`
`│                                                                            │`
`╰────────────────────────────────────────────────────────────────────────────╯`

This sub option allows you to change where the `file paths` are shown.

By default, it will show it on the bottom left part of the window.

`├────────────────────────────────────────────────────────────────────────────┐`
`│` {textStyle}                                                   table or nil `│`
`├────────────────────────────────────────────────────────────────────────────┘`

Usage
`╭` Lua `───────────────────────────────────────────────────────────────────────╮`
>lua
  require("intro").setup({
    textStyle = { fg = "#ffffff" }
  })
<
`╰────────────────────────────────────────────────────────────────────────────╯`
`╭` Neovim `────────────────────────────────────────────────────────────────────╮`
`│                                                                            │`
`│                                                                            │`
`│                                                                            │`
`│                                                                            │`
`│` ~/.config/nvim/lua/plugins/intro.lua                                       `│`
`╰────────────────────────────────────────────────────────────────────────────╯`

This sub option allows you to change the style of the `file paths`, the table
is passed to `nvin_set_hl()` so you can use any of the values listed in the
`nvim_set_hl()` help file.

By default, the background is set to #BAC2DE and the foreground/text color
is set to #181825.

It is used for the `Intro_anchor_body` highligt group.

`├────────────────────────────────────────────────────────────────────────────┐`
`│` {cornerStyle}                                                 table or nil `│`
`├────────────────────────────────────────────────────────────────────────────┘`

Usage
`╭` Lua `───────────────────────────────────────────────────────────────────────╮`
>lua
  require("intro").setup({
    cornerStyle = { fg = "#ffffff" }
  })
<
`╰────────────────────────────────────────────────────────────────────────────╯`
`╭` Neovim `────────────────────────────────────────────────────────────────────╮`
`│                                                                            │`
`│                                                                            │`
`│                                                                            │`
`│                                                                            │`
`│` ~/.config/nvim/lua/plugins/intro.lua ||                                    `│`
`╰────────────────────────────────────────────────────────────────────────────╯`

This sub option allows you to change the style of the `corner`, the table
is passed to `nvin_set_hl()` so you can use any of the values listed in the
`nvim_set_hl()` help file.

By default, the background is set to #BAC2DE and the foreground/text color
is set to #181825.

It has no effect if {corner} is an empty string.

It is used for the `Intro_anchor_corner` highligt group.

`├────────────────────────────────────────────────────────────────────────────┐`
`│` {corner}                                                     string or nil `│`
`├────────────────────────────────────────────────────────────────────────────┘`

Usage
`╭` Lua `───────────────────────────────────────────────────────────────────────╮`
>lua
  require("intro").setup({
    corner = " &&"
  })
<
`╰────────────────────────────────────────────────────────────────────────────╯`
`╭` Neovim `────────────────────────────────────────────────────────────────────╮`
`│                                                                            │`
`│                                                                            │`
`│                                                                            │`
`│                                                                            │`
`│` ~/.config/nvim/lua/plugins/intro.lua &&                                    `│`
`╰────────────────────────────────────────────────────────────────────────────╯`

This sub option allows you to change the characters to show as the `corner`.

By default(and if the value isn't a `string`) it is set to a space followed by
a `nf-ple-upper_right_triangle`(the name of the nerd font character).

`╠════════════════════════════════════════════════════════════════════════════╗`
`║` {preset}                                            string or table or nil `║`
`╠════════════════════════════════════════════════════════════════════════════╝`

Usage
`╭` Lua `───────────────────────────────────────────────────────────────────────╮`
>lua
  require("intro").setup({
    preset = {
      name = "startify",
      opts = { "blue" }
    }
  })
<
`╰────────────────────────────────────────────────────────────────────────────╯`
`╭` Neovim `────────────────────────────────────────────────────────────────────╮`
`│                                                                            │`
`│                                                                            │`
`│         _/      _/                       _/      _/  _/                    │`
`│        _/_/    _/    _/_/      _/_/     _/      _/      _/_/_/  _/_/       │`
`│       _/  _/  _/  _/_/_/_/  _/    _/   _/      _/  _/  _/    _/    _/      │`
`│      _/    _/_/  _/        _/    _/     _/  _/    _/  _/    _/    _/       │`
`│     _/      _/    _/_/_/    _/_/         _/      _/  _/    _/    _/        │`
`│                                                                            │`
`│                                                                            │`
`╰────────────────────────────────────────────────────────────────────────────╯`

This option allows you to load a preset or it's varient(s) that come with
the plugin.

`╭` What are presets? `─────────────────────────────────────────────────────────╮`
`│` Presets are an easy way to setup the plugin without having to write long   `│`
`│` configuration tables yourself.                                             `│`
`╰────────────────────────────────────────────────────────────────────────────╯`

When the value is a `string` it will load that preset with that name with the
default values of the `preset`.

When the value is a `table` it optionally takes an {opts} value which is a
list of setting to use in that preset. The name of the preset is set with
the {name} property.

`├────────────────────────────────────────────────────────────────────────────┐`
`│` {name}                                                       string or nil `│`
`├────────────────────────────────────────────────────────────────────────────┘`

The name of the `preset`.

`├────────────────────────────────────────────────────────────────────────────┐`
`│` {opts}                                                        table or nil `│`
`├────────────────────────────────────────────────────────────────────────────┘`

A list containing all the configuration options for that `preset`.


More information about presets are available in `intro.nvim-presets`.

`╠════════════════════════════════════════════════════════════════════════════╗`
`║` {components}                                                  table or nil `║`
`╠════════════════════════════════════════════════════════════════════════════╝`

Usage
`╭` Lua `───────────────────────────────────────────────────────────────────────╮`
>lua
  require("intro").setup({
    components = {
      "A centered text",
      {
        lines = { "A normal text", "A right aligned text" }
	align = { "left", "right" }
      }
    }
  })
<
`╰────────────────────────────────────────────────────────────────────────────╯`
`╭` Neovim `────────────────────────────────────────────────────────────────────╮`
`│                              A centered Text                               │`
`│A normal text                                                               │`
`│                                                        A right aligned text│`
`╰────────────────────────────────────────────────────────────────────────────╯`

A list containing various types of `components` to render.

To learn more about the various `components` and their usage check the
`intro.nvim-components` page. All the component related properties are
listed there.

`╠════════════════════════════════════════════════════════════════════════════╗`
`║` {globalHighlights}                                            table or nil `║`
`╠════════════════════════════════════════════════════════════════════════════╝`

Usage
`╭` Lua `───────────────────────────────────────────────────────────────────────╮`
>lua
  require("intro").setup({
    globalHighlights = {
      cl_1 = { fg = "#F9E2AF" },
      cl_2 = { fg = "#f5c2e7" }
    }
  })
<
`╰────────────────────────────────────────────────────────────────────────────╯`
`╭` Cmdline `───────────────────────────────────────────────────────────────────╮`
`│` :hi Intro_cl_1                                                             `│`
`╰────────────────────────────────────────────────────────────────────────────╯`
`╭` Messages `──────────────────────────────────────────────────────────────────╮`
`│` Intro_cl_1 xxx guifg=#F9E2AF                                               `│`
`╰────────────────────────────────────────────────────────────────────────────╯`

A list of `highlight groups` and their configuration tables. You can use these
in various components, animations and other places if you like.

It only has effect when `intro.nvim` is open. Otherwise, the highlights are
not set.

`╠════════════════════════════════════════════════════════════════════════════╗`
`║` {animations}                                                  table or nil `║`
`╠════════════════════════════════════════════════════════════════════════════╝`

Usage
`╭` Lua `───────────────────────────────────────────────────────────────────────╮`
>lua
  require("intro").setup({
    animations = {
      delay = 500, updateDelay = 50,

      highlightBased = {
        {
	  groupName = "cl_1",
	  values = { 
	    { fg = "#f9e2af" }, { fg = "#b0a084" }, { fg = "#675f59" }, 
	    { fg = "#1e1e2e" }, 
	    { fg = "#675f59" }, { fg = "#b0a084" }, { fg = "#f9e2af" }
	  }
	}
      },

      textBased = {
        {
	  mode = "virt_text",
	  x = 0, y = 0,
	  values = {
	    "", "A", "A ", "A t", "A te", "A tex",
	    "A text",
	    "A tex", "A te", "A t", "A ", "A", ""
	  }
	}
      }
    }
  })
<
`╰────────────────────────────────────────────────────────────────────────────╯`

This option allows you to control various `animation` related stuffs.

It has these `sub options`,

`├────────────────────────────────────────────────────────────────────────────┐`
`│` {delay}                                                      number or nil `│`
`├────────────────────────────────────────────────────────────────────────────┘`

Amount(in `miliseconds`) of time to wait before starting the animations. It
is especially useful when other plugin(s) or Neovim may prevent the 
animations from happening.

The default value is `0`.

`├────────────────────────────────────────────────────────────────────────────┐`
`│` {updateDelay}                                                number or nil `│`
`├────────────────────────────────────────────────────────────────────────────┘`

Amount(in `miliseconds`) of time to wait before performing an `animation step.`
It is used to make the animations fast or slow.

`╭` Why does the update delay matter? `─────────────────────────────────────────╮`
`│` When an animation has only a few frames its better to use a smaller        `│`
`│` update delay as it will make it look smoother.                             `│`
`│`                                                                            `│`
`│` For creating slow but consistent animation a small value along with a      `│`
`│` large number of steps can be used.                                         `│`
`│`                                                                            `│`
`│` However, using a lot of animations along with a small update delay may     `│`
`│` result in lags or crashes. So, keep an eye out for that.                   `│`
`╰────────────────────────────────────────────────────────────────────────────╯`

`├────────────────────────────────────────────────────────────────────────────┐`
`│` {highlightBased}                                              table or nil `│`
`├────────────────────────────────────────────────────────────────────────────┘`

A list-like table containing all the animations related to `highlight groups`

It is explained in more detail in `intro.nvim-animations`.

`├────────────────────────────────────────────────────────────────────────────┐`
`│` {textBased}                                                   table or nil `│`
`├────────────────────────────────────────────────────────────────────────────┘`

A list-like table containing all the animations related to `texts`.

It is explained in more detail in `intro.nvim-animations`.

`╭──────────────────────────────────────────────────────` *intro.nvim-opts-tldr* `╮`
`│` 🎨 Quick summary of various Options                                  `TLDR: │`
`╰────────────────────────────────────────────────────────────────────────────╯`

{showStatusline}           Show/hide the `statusline`.

{anchors}                  Control `file path` preview.
├──{position}              `File path` preview position.
├──{textStyle}             `File path` text customisation.
├──{cornerStyle}           Preview `corner` customisation.
└──{corner}                Characters to show as the `corner`.

{preset}                   `Preset` name and their options.
├──{name}                  Name of the `preset`.
└──{opts}                  List of options to use in this `preset`.

{components}               List of `components` to render.
├──{type}                  Name of the `component`.
├──{style}                 Component render style.
├──{width}                 Custom width of the text.
├──{useIcons}              Enable/disable `icons` before file name.
├──{entryCount}            Number of recent files to show.
├──{keymap}                Keymap to open file under `cursor`.
├──{useAnchors}            Show/hide the `file paths` when cursor is on this
│                          `component`.
├──{dir}                   The `directory` whose recent files to show.
├──{align}                 `Alignment` of text.
├──{lines}                 Lines of text to render.
├──{colors}                Coloring of the text.
├──{secondaryColors}       Colors to add on specific parts of the text.
├──{gradientRepeat}        Enable/disable repeating of `gradients`.
│
├──{keyCombination}        Key combination to do something.
├──{keyAction}             What to do if a specific key combination is used.
├──{keyOptions}            Options for a `keymap`.
├──{gaps}                  Characters to use as separator between 2 columns.
├──{text}                  Text to show for a `keymap`.
└──{color}                 Coloring of the keymap text.

{globalHighlights}         Various `highlight groups` setup.

{animations}               Animations and their settings.
├──{delay}                 Delay before starting all the animations.
├──{updateDelay}           Delay between `animation steps.`
├──{textBased}             List of `text based` animations.
└──{highlightBased}        List of `highlight group based` animations.
   ├──{startDelay}         Number of frames to wait before starting.
   ├──{frameDelay}         Number of frames to wait between each step/frame.
   ├──{loopDelay}          Number of frames to wait between each loop.
   ├──{values}             List of animation steps/frames.
   ├──{mode}               The rendering method for `text animations.`
   ├──{line}               Index of the rendered line to replace.
   ├──{x}                  Horizontal position of `virtual text.`
   └──{y}                  Vertical position of `virtual text.`

 
`─────────────────────────────────────────────────────────────────────────────┤`
vim:tw=77:ts=8:noet:ft=help:norl:
